module sdsheji(one,half,reset,clk,outdrink,outmoney,seg,out);
parameter s0=0,s1=1,s2=2,s3=3,s4=4;
input one,half,reset,clk; //1元，0.5元，重置，时钟
output outdrink,outmoney; //接LED0灯，提示输出饮料;接LED1灯，提示输出找零
output seg;//控制某个数目管亮，但是由于时钟频率较高，产生同时亮起的视觉效应
output out;//控制数码管的显示
reg[7:0]seg;
reg[6:0]out;
reg[4:0]sum;
reg[4:0]change;
reg[4:0]temp;
reg outdrink,outmoney;
reg[2:0]state;
reg[2:0]state1;
reg y,j;

//状态机
always @(negedge reset, posedge one, posedge half, posedge clk)
begin
	if(!reset)
			begin
			outdrink=0;
			outmoney=0;
			state=0;
			y=0; j=0;
			sum=0; change=0;
			end 
    else if(half) j=1;                                         
    else if(one)  y=1;
    else
        begin 
              case(state)
				  s0:begin outmoney=0;outdrink=0;
					   sum=0; change=0;
					   if(j==1)begin //投入0.5元，进入状态s1
							state=s1;j=0; end
					   else if(y==1) begin // 投入1元，进入状态s2
							state=s2;y=0; end
                     else state = s0; 
					  end
				  s1: begin outmoney=0;outdrink=0; //已投0.5元
					  sum=5'd5; change=0;
					   if(j==1) begin 
							state=s2;j=0; end
						else if(y==1) begin end 
	state=s3;y=0; end
							state=s3;y=0;
                     else state = s0; 
					  end
				  s2: begin outmoney=0;outdrink=0; //已投1元
					  sum=5'd10; change=0;
					   if(j==1) begin  
							state=s3;j=0; end  
					   else if(y==1) begin 
							state=s4;y=0; end  
                    else state = s0; 
					   end
//已经投入1.5元，售出饮料，找零为0元
				  s3: begin outmoney=0;outdrink=1;  					  					   	  sum=5'd15; change=0;
					  j=0; y=0;
                    state = s0;
					  end  
 //已经投入2元，则售出饮料，找零0.5元
s4: begin outmoney=1;outdrink=1;  
					  sum=5'd20; change=5'd5;
					  j=0; y=0;
                   state = s0;
					  end
             endcase
        end
end          

//用于控制哪个数码管亮，在这几个状态之间一直循环，形成同时亮的视觉现象
always@(posedge clk)
begin
	case(state1)  
	0:	begin //显示找零值
			seg=8'b0000_0001;  
			if(change==0) temp=0;
			else temp=5'd5;
			state1=1;
		end
	1:	begin //显示投币总额的个位数
			seg=8'b0100_0000; 
			if(sum==0 || sum==5'd10 || sum==5'd20) temp=0;
			else temp=5'd5;
			state1=2;
		end
	2:	begin	//显示投币总额的十位数
			seg=8'b1000_0000;
			if(sum==0 || sum==5) temp=0;
			else if(sum==10 || sum==15) temp =5'd1;
			else temp = 5'd2;
			state1=0;
		end
	default:state1=0;
	endcase
end

always@(temp) begin  //接数码管
	case(temp)  //共就四种显示
		5'd0:out=7'b111_1110;
		5'd1:out=7'b011_0000;
		5'd2:out=7'b110_1101;
		5'd5:out=7'b101_1011;
	endcase
end

endmodule


//仿真代码
`timescale 1ns/1ns

module T_test;

reg one;
reg half;
reg reset;
reg clk;
wire outdrink;
wire outmoney;
wire [7:0]seg;
wire [6:0]out;


test test1 (
.one(one),
.half(half),
.reset(reset),
.clk(clk),
.outdrink(outdrink),
.outmoney(outmoney),
.seg(seg),
.out(out)
);

initial begin
reset = 0;
half = 0;
one = 0;
clk = 0;
#100 
reset = 1;

//连续投入0.5元
#200
half = 1;
#200
half = 0;
#200
half = 1;
#200
half = 0;
#200
half = 1;
#200
half = 0;
#20
//连续投入一元
reset = 0;
#20
reset = 1;
#300
one = 1;
#200
one = 0;
#200
one = 1;
#200
one = 0;
//先投1元，再投0.5元
#20
reset = 0;
#20
reset = 1;
#200
one =1;
#200
one = 0;
#200
half = 1;
#200
half = 0;
//先投0.5元，再投一元
#20
reset = 0;
#20
reset = 1;
#200
half =1;
#200
half= 0;
#200
one = 1;
#200
one = 0;

end


always #1 clk = ~clk;


endmodule