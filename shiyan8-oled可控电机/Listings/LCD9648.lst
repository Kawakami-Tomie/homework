C51 COMPILER V9.60.0.0   LCD9648                                                           07/08/2024 14:27:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD9648
OBJECT MODULE PLACED IN .\Objects\LCD9648.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE LCD9648.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\LCD9648.lst) TABS(2) OBJECT(.\Objects\LCD9648.obj)

line level    source

   1          #include<reg51.h>
   2          #include"charcode.h"
   3          
   4          sbit CS0  = P0^0;   //片选
   5          sbit RST  = P0^1;   //复位
   6          sbit RS   = P2^7;     //数据命令选择端
   7          sbit SCL  = P2^6;   //SPI时钟端
   8          sbit SDA  = P2^5;   //SPI数据端
   9          
  10          unsigned char lcd0[18][16]=
  11          {   
  12            /*--  文字:  0  --*/
  13            {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,},
  14            /*--  文字:  1  --*/
  15            {0x00,0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,},
  16            /*--  文字:  2  --*/
  17            {0x00,0x70,0x08,0x08,0x08,0x08,0xF0,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,},
  18            /*--  文字:  3  --*/
  19            {0x00,0x30,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x18,0x20,0x21,0x21,0x22,0x1C,0x00,},
  20            /*--  文字:  4  --*/
  21            {0x00,0x00,0x80,0x40,0x30,0xF8,0x00,0x00,0x00,0x06,0x05,0x24,0x24,0x3F,0x24,0x24,},
  22            /*--  文字:  5  --*/
  23            {0x00,0xF8,0x88,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x20,0x20,0x20,0x11,0x0E,0x00,},
  24            /*--  文字:  6  --*/
  25            {0x00,0xE0,0x10,0x88,0x88,0x90,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x20,0x1F,0x00,},
  26            /*--  文字:  7  --*/
  27            {0x00,0x18,0x08,0x08,0x88,0x68,0x18,0x00,0x00,0x00,0x00,0x3E,0x01,0x00,0x00,0x00,},
  28            /*--  文字:  8  --*/
  29            {0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,},
  30            /*--  文字:  9  --*/
  31            {0x00,0xF0,0x08,0x08,0x08,0x10,0xE0,0x00,0x00,0x01,0x12,0x22,0x22,0x11,0x0F,0x00,},
  32            /*--  文字:  :  --*/
  33            {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,},
  34            /*--  文字:  -  --*/
  35            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,},
  36            /*--  文字:     --*/
  37            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,},
  38            /*--  文字:  .  --*/
  39            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,},
  40            /*--  文字:  T  --*/
  41            {0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,},
  42            /*--  文字:  A  --*/
  43            {0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,},
  44            /*--  文字:  °C  F--*/
  45            {0xC6,0x36,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,},
  46            /*--  文字:  U  --*/
  47            {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,}
  48           
  49          };
  50          
  51          
  52          
  53          
  54          
C51 COMPILER V9.60.0.0   LCD9648                                                           07/08/2024 14:27:49 PAGE 2   

  55          
  56          
  57          void Delay10ms(unsigned int c)   //误差 0us
  58          {
  59   1          unsigned char a,b;
  60   1          for(;c>0;c--)
  61   1              for(b=38;b>0;b--)
  62   1                  for(a=130;a>0;a--);
  63   1      }
  64          
  65          
  66          void  SendDataSPI(unsigned char dat)
  67          {  
  68   1         unsigned char i;
  69   1         
  70   1         for(i=0; i<8; i++)     
  71   1         {  
  72   2            if( (dat&0x80)!=0 ) SDA = 1;
  73   2              else SDA = 0;
  74   2      
  75   2            dat <<= 1;
  76   2      
  77   2          SCL = 0;
  78   2            SCL = 1;      
  79   2         }
  80   1      }
  81          
  82          void WriteComm(unsigned int i)
  83          {
  84   1      
  85   1          CS0 = 0;
  86   1        RS  = 0;
  87   1      
  88   1        SendDataSPI(i);  ///
  89   1      
  90   1        CS0 = 1;
  91   1      
  92   1      }
  93          void WriteData(unsigned int i)
  94          {
  95   1          CS0 = 0;
  96   1        RS  = 1;
  97   1      
  98   1        SendDataSPI(i);
  99   1      
 100   1        CS0 = 1;
 101   1      }
 102          
 103          void LCD_Init(void)
 104          {
 105   1        unsigned int i;
 106   1        //CS0=0;
 107   1        
 108   1        RST=1;  
 109   1        for(i = 0; i < 1000; i++);
 110   1        
 111   1        RST=0;
 112   1        for(i = 0; i < 1000; i++);
 113   1      
 114   1        RST=1;
 115   1        for(i = 0; i < 1000; i++);
 116   1      
C51 COMPILER V9.60.0.0   LCD9648                                                           07/08/2024 14:27:49 PAGE 3   

 117   1          WriteComm(0xe2);      //软件复位
 118   1        WriteComm(0xc8);      //0xC8普通方向选择选择反向，0xC0为正常方向
 119   1        WriteComm(0xa0);      //0xA0段方向选择正常方向（0xA1为反方向
 120   1        WriteComm(0x2f);
 121   1        WriteComm(0x26);
 122   1        WriteComm(0x81);      //背景光对比度
 123   1        WriteComm(0x10);
 124   1        WriteComm(0xaf);      //开启显示
 125   1      
 126   1      }
 127          
 128          
 129          void Clear()
 130          {
 131   1        unsigned char i,j;
 132   1        
 133   1        for(i=0; i < 9; i++)
 134   1        {
 135   2          WriteComm(0x40);
 136   2          WriteComm(0xb0+i);
 137   2          WriteComm(0x10);
 138   2          WriteComm(0x00);
 139   2          
 140   2          for(j = 0; j < 96; j++)
 141   2          {
 142   3            WriteData(0x00);  
 143   3          } 
 144   2        }   
 145   1      }
 146          
 147          
 148          unsigned char LCD12864_Write16CnCHAR(unsigned char  x, unsigned char y, unsigned char *cn)
 149          {
 150   1        unsigned char j, x1, x2, wordNum;
 151   1      
 152   1        //--Y的坐标只能从0到7，大于则直接返回--//
 153   1        if(y > 7)
 154   1        {
 155   2          return 0;
 156   2        }
 157   1      
 158   1        //--X的坐标只能从0到96，大于则直接返回--//
 159   1        if(x > 96)
 160   1        {
 161   2          return 0;
 162   2        }
 163   1        y += 0xB0;     //求取Y坐标的值
 164   1        //--设置Y坐标--//
 165   1        WriteComm(y);
 166   1        while ( *cn != '\0')   //在C语言中字符串结束以‘\0’结尾
 167   1        { 
 168   2        
 169   2          //--设置Y坐标--//
 170   2          WriteComm(y);
 171   2      
 172   2          x1 = (x >> 4) & 0x0F;   //由于X坐标要两句命令，分高低4位，所以这里先取出高4位
 173   2          x2 = x & 0x0F;          //去低四位
 174   2          //--设置X坐标--//
 175   2          WriteComm(0x10 + x1);   //高4位
 176   2          WriteComm(0x00 + x2); //低4位
 177   2          for (wordNum=0; wordNum<30; wordNum++)
 178   2          {
C51 COMPILER V9.60.0.0   LCD9648                                                           07/08/2024 14:27:49 PAGE 4   

 179   3              //--查询要写的字在字库中的位置--//
 180   3            if ((CN16CHAR[wordNum].Index[0] == *cn)
 181   3                 &&(CN16CHAR[wordNum].Index[1] == *(cn+1)))
 182   3            {
 183   4              for (j=0; j<32; j++) //写一个字
 184   4              {   
 185   5                if (j == 16)   //由于16X16用到两个Y坐标，当大于等于16时，切换坐标
 186   5                {
 187   6                  //--设置Y坐标--//
 188   6                    WriteComm(y + 1);
 189   6            
 190   6                  //--设置X坐标--//
 191   6                  WriteComm(0x10 + x1);   //高4位
 192   6                  WriteComm(0x00 + x2); //低4位
 193   6                }
 194   5                WriteData(CN16CHAR[wordNum].Msk[j]);
 195   5              }
 196   4              x += 16;
 197   4            }//if查到字结束   
 198   3          } //for查字结束
 199   2          cn += 2;
 200   2          
 201   2        } //while结束
 202   1        return 1;
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    541    ----
   CONSTANT SIZE    =    986    ----
   XDATA SIZE       =    288       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
